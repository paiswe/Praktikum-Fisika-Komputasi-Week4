# -*- coding: utf-8 -*-
"""PrakFiskom4_Metode Numerik.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IyR_F8RITldLqjh2zYfwrd3gCI-PaNXO
"""

import numpy as np
import matplotlib.pyplot as plt

def func(x):
  return(x**2)*np.exp(-x)
a = 1.0
b = 10.0

n = 10
dx = (b-a)/(n-1)
x = np.linspace(a,b,n)

sigma = 0 
for i in range (1,n-1):
  sigma += func(x[i])

hasil = (1/2)*dx*(func(x[0])+2*sigma+func(x[-1]))
print("HASIL")
print("                                               ")
print(hasil)

print("                                               ")
print("GRAFIK 1")
print("                                               ")

xp = np.linspace(a,b,1000)
plt.plot(xp,func(xp))
plt.show()

print("                                               ")
print("GRAFIK 2")
print("                                               ")

xp = np.linspace(a,b,1000)
plt.plot(xp,func(xp))
for i in range (n):
  plt.bar(x[i],func(x[i]),align = 'edge', width = 0.000001, edgecolor = 'blue')
plt.show()

print("                                               ")
print("GRAFIK AKHIR")
print("                                               ")

xp =np.linspace(a,b,1000)
plt.plot(xp,func(xp))

for i in range (n):
  plt.bar(x[i],func(x[i]), align = 'edge',width = 0.000001, edgecolor='blue')

plt.fill_between(x,func(x),color= 'yellow')

plt.show()

print("                                                     ")
print("---------------- METODE RIEMANN -----------------")
print("                                                     ")

x = np.linspace(a,b,n)
dx = (x[-1]-x[0])/(n-1)

hasil = 0
for i in range (n-1):
  hasil += dx*func(x[1])

xp = np.linspace(a,b)
plt.plot(xp,func(xp))
for i in range (n-1):
  plt.bar(x[i],func(x[i]), align = 'edge', width=dx, color ='blue', edgecolor='black')
plt.show()
print("                          ")
print("HASIL")
print("                          ")
print(hasil)
print("                          ")
print("n = 100 ")
def Trapezoid(n):
  dx = (b-a)/(n-1)
  x = np.linspace(a,b,n)
  sigma = 0
  for i in range (1, n-1):
        sigma += func(x[i])

  hasil = 0.5*dx*(func(x[0])+2*sigma+func(x[-1]))
  print("                       ")
  print("HASIL")
  print(hasil)
    
  xp =np.linspace(a,b,1000)
  plt.plot(x,func(x))

  for i in range (n):
      plt.bar(x[i],func(x[i]), align = 'edge',width = 0.000001, edgecolor='blue')

  plt.fill_between(x,func(x),color= 'yellow')
  print("                   ")
  print("GRAFIK")
  print("                   ")
  plt.show()
  Trapezoid(100)

def Riemann(n):
    x = np.linspace(a,b,n)
    dx = (x[-1]-x[0])/(n-1)

    hasil = 0
    for i in range (n-1):
        hasil += dx*func(x[1])

    xp = np.linspace(a,b)
    plt.plot(xp,func(xp))
    for i in range (n-1):
        plt.bar(x[i],func(x[i]), align = 'edge', width=dx, color ='red', edgecolor='black')
    plt.show()
    print(hasil)

    Riemann(100)

Trapezoid (1000)
Riemann(1000)